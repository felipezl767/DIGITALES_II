

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 03 19:37:24 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     nosup@@$_$_CONFIG	set	0	;# 
   129  0000                     nosup@@$_$_CONFIG	set	0	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208                           
   209                           	psect	idataCOMMON
   210  0777                     __pidataCOMMON:
   211                           
   212                           ;initializer for _display
   213  0777  343F               	retlw	63
   214  0778  3406               	retlw	6
   215  0779  345B               	retlw	91
   216  077A  34F4               	retlw	244
   217  077B  3466               	retlw	102
   218  077C  346D               	retlw	109
   219  077D  347D               	retlw	125
   220  077E  3407               	retlw	7
   221  077F  347F               	retlw	127
   222  0780  346F               	retlw	111
   223  0008                     _PORTD	set	8
   224  0001                     _TMR0	set	1
   225  000B                     _INTCONbits	set	11
   226  0088                     _TRISD	set	136
   227  0081                     _OPTION_REGbits	set	129
   228  042C                     _TRISA4	set	1068
   229  0188                     _ANSEL	set	392
   230                           
   231                           	psect	cinit
   232  07BF                     start_initialization:	
   233                           ; #config settings
   234                           
   235  07BF                     __initialization:
   236                           
   237                           ; Initialize objects allocated to COMMON
   238  07BF  120A  118A  2777  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   239  07C4  00F0               	movwf	__pdataCOMMON& (0+127)
   240  07C5  120A  118A  2778  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   241  07CA  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   242  07CB  120A  118A  2779  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   243  07D0  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   244  07D1  120A  118A  277A  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   245  07D6  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   246  07D7  120A  118A  277B  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   247  07DC  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   248  07DD  120A  118A  277C  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   249  07E2  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   250  07E3  120A  118A  277D  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   251  07E8  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   252  07E9  120A  118A  277E  120A  118A  	fcall	__pidataCOMMON+7	;fetch initializer
   253  07EE  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   254  07EF  120A  118A  277F  120A  118A  	fcall	__pidataCOMMON+8	;fetch initializer
   255  07F4  00F8               	movwf	(__pdataCOMMON+8)& (0+127)
   256  07F5  120A  118A  2780  120A  118A  	fcall	__pidataCOMMON+9	;fetch initializer
   257  07FA  00F9               	movwf	(__pdataCOMMON+9)& (0+127)
   258                           
   259                           ; Clear objects allocated to COMMON
   260  07FB  01FA               	clrf	__pbssCOMMON& (0+127)
   261  07FC                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264  07FC                     __end_of__initialization:
   265  07FC  0183               	clrf	3
   266  07FD  120A  118A  2F94   	ljmp	_main	;jump to C main() function
   267                           
   268                           	psect	bssCOMMON
   269  007A                     __pbssCOMMON:
   270  007A                     _count:
   271  007A                     	ds	1
   272                           
   273                           	psect	dataCOMMON
   274  0070                     __pdataCOMMON:
   275  0070                     _display:
   276  0070                     	ds	10
   277                           
   278                           	psect	inittext
   279  0781                     init_fetch0:	
   280                           ;	Called with low address in FSR and high address in W
   281                           
   282  0781  087E               	movf	btemp,w
   283  0782  008A               	movwf	10
   284  0783  087F               	movf	btemp+1,w
   285  0784  0082               	movwf	2
   286  0785                     init_ram0:	
   287                           ;Called with:
   288                           ;	high address of idata address in btemp 
   289                           ;	low address of idata address in btemp+1 
   290                           ;	low address of data in FSR
   291                           ;	high address + 1 of data in btemp-1
   292                           
   293  0785  120A  118A  2781  120A  118A  	fcall	init_fetch0
   294  078A  0080               	movwf	0
   295  078B  0A84               	incf	4,f
   296  078C  0804               	movf	4,w
   297  078D  067D               	xorwf	btemp+-1,w
   298  078E  1903               	btfsc	3,2
   299  078F  3400               	retlw	0
   300  0790  0AFF               	incf	btemp+1,f
   301  0791  1903               	btfsc	3,2
   302  0792  0AFE               	incf	btemp,f
   303  0793  2F85               	goto	init_ram0
   304                           
   305                           	psect	cstackCOMMON
   306  007B                     __pcstackCOMMON:
   307  007B                     ?_main:
   308  007B                     ??_main:	
   309                           ; 1 bytes @ 0x0
   310                           
   311                           
   312                           ; 1 bytes @ 0x0
   313  007B                     	ds	1
   314                           
   315                           	psect	maintext
   316  0794                     __pmaintext:	
   317 ;;
   318 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   319 ;;
   320 ;; *************** function _main *****************
   321 ;; Defined at:
   322 ;;		line 10 in file "Contador.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;		None
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   331 ;; Tracked objects:
   332 ;;		On entry : B00/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   336 ;;      Params:         0       0       0       0       0
   337 ;;      Locals:         0       0       0       0       0
   338 ;;      Temps:          1       0       0       0       0
   339 ;;      Totals:         1       0       0       0       0
   340 ;;Total ram usage:        1 bytes
   341 ;; This function calls:
   342 ;;		Nothing
   343 ;; This function is called by:
   344 ;;		Startup code after reset
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348  0794                     _main:	
   349                           ;psect for function _main
   350                           
   351  0794                     l619:	
   352                           ;incstack = 0
   353                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   354                           
   355                           
   356                           ;Contador.c: 11:     INTCONbits.GIE = 0;
   357  0794  138B               	bcf	11,7	;volatile
   358                           
   359                           ;Contador.c: 12:     OPTION_REGbits.T0CS = 1;
   360  0795  1683               	bsf	3,5	;RP0=1, select bank1
   361  0796  1303               	bcf	3,6	;RP1=0, select bank1
   362  0797  1681               	bsf	1,5	;volatile
   363                           
   364                           ;Contador.c: 13:     OPTION_REGbits.T0SE = 1;
   365  0798  1601               	bsf	1,4	;volatile
   366  0799                     l621:
   367                           
   368                           ;Contador.c: 14:     TMR0 = 0;
   369  0799  1283               	bcf	3,5	;RP0=0, select bank0
   370  079A  1303               	bcf	3,6	;RP1=0, select bank0
   371  079B  0181               	clrf	1	;volatile
   372                           
   373                           ;Contador.c: 16:     TRISD = 0x00;
   374  079C  1683               	bsf	3,5	;RP0=1, select bank1
   375  079D  1303               	bcf	3,6	;RP1=0, select bank1
   376  079E  0188               	clrf	8	;volatile
   377                           
   378                           ;Contador.c: 17:     PORTD = 0x00;
   379  079F  1283               	bcf	3,5	;RP0=0, select bank0
   380  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   381  07A1  0188               	clrf	8	;volatile
   382  07A2                     l623:
   383                           
   384                           ;Contador.c: 19:     TRISA4 = 1;
   385  07A2  1683               	bsf	3,5	;RP0=1, select bank1
   386  07A3  1303               	bcf	3,6	;RP1=0, select bank1
   387  07A4  1605               	bsf	5,4	;volatile
   388                           
   389                           ;Contador.c: 20:     ANSEL = 0x00;
   390  07A5  1683               	bsf	3,5	;RP0=1, select bank3
   391  07A6  1703               	bsf	3,6	;RP1=1, select bank3
   392  07A7  0188               	clrf	8	;volatile
   393  07A8                     l625:
   394                           
   395                           ;Contador.c: 23:         if (TMR0 == 10) {
   396  07A8  300A               	movlw	10
   397  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   398  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   399  07AB  0601               	xorwf	1,w	;volatile
   400  07AC  1D03               	btfss	3,2
   401  07AD  2FAF               	goto	u11
   402  07AE  2FB0               	goto	u10
   403  07AF                     u11:
   404  07AF  2FB2               	goto	l629
   405  07B0                     u10:
   406  07B0                     l627:
   407                           
   408                           ;Contador.c: 24:             TMR0 = 0;
   409  07B0  0181               	clrf	1	;volatile
   410                           
   411                           ;Contador.c: 25:             count = 0;
   412  07B1  01FA               	clrf	_count
   413  07B2                     l629:
   414                           
   415                           ;Contador.c: 27:         count = TMR0;
   416  07B2  0801               	movf	1,w	;volatile
   417  07B3  00FB               	movwf	??_main
   418  07B4  087B               	movf	??_main,w
   419  07B5  00FA               	movwf	_count
   420  07B6                     l631:
   421                           
   422                           ;Contador.c: 28:         PORTD = display[count];
   423  07B6  087A               	movf	_count,w
   424  07B7  3E70               	addlw	(low (_display| 0))& (0+255)
   425  07B8  0084               	movwf	4
   426  07B9  0800               	movf	0,w
   427  07BA  0088               	movwf	8	;volatile
   428  07BB  2FA8               	goto	l625
   429  07BC  120A  118A  2800   	ljmp	start
   430  07BF                     __end_of_main:
   431  007E                     btemp	set	126	;btemp
   432  007E                     wtemp0	set	126
   433                           
   434                           	psect	idloc
   435                           
   436                           ;Config register IDLOC0 @ 0x2000
   437                           ;	unspecified, using default values
   438  2000                     	org	8192
   439  2000  3FFF               	dw	16383
   440                           
   441                           ;Config register IDLOC1 @ 0x2001
   442                           ;	unspecified, using default values
   443  2001                     	org	8193
   444  2001  3FFF               	dw	16383
   445                           
   446                           ;Config register IDLOC2 @ 0x2002
   447                           ;	unspecified, using default values
   448  2002                     	org	8194
   449  2002  3FFF               	dw	16383
   450                           
   451                           ;Config register IDLOC3 @ 0x2003
   452                           ;	unspecified, using default values
   453  2003                     	org	8195
   454  2003  3FFF               	dw	16383
   455                           
   456                           	psect	config
   457                           
   458                           ;Config register CONFIG1 @ 0x2007
   459                           ;	unspecified, using default values
   460                           ;	Oscillator Selection bits
   461                           ;	FOSC = 0x7, unprogrammed default
   462                           ;	Watchdog Timer Enable bit
   463                           ;	WDTE = 0x1, unprogrammed default
   464                           ;	Power-up Timer Enable bit
   465                           ;	PWRTE = 0x1, unprogrammed default
   466                           ;	RE3/MCLR pin function select bit
   467                           ;	MCLRE = 0x1, unprogrammed default
   468                           ;	Code Protection bit
   469                           ;	CP = 0x1, unprogrammed default
   470                           ;	Data Code Protection bit
   471                           ;	CPD = 0x1, unprogrammed default
   472                           ;	Brown Out Reset Selection bits
   473                           ;	BOREN = 0x3, unprogrammed default
   474                           ;	Internal External Switchover bit
   475                           ;	IESO = 0x1, unprogrammed default
   476                           ;	Fail-Safe Clock Monitor Enabled bit
   477                           ;	FCMEN = 0x1, unprogrammed default
   478                           ;	Low Voltage Programming Enable bit
   479                           ;	LVP = 0x1, unprogrammed default
   480                           ;	In-Circuit Debugger Mode bit
   481                           ;	DEBUG = 0x1, unprogrammed default
   482  2007                     	org	8199
   483  2007  3FFF               	dw	16383
   484                           
   485                           ;Config register CONFIG2 @ 0x2008
   486                           ;	unspecified, using default values
   487                           ;	Brown-out Reset Selection bit
   488                           ;	BOR4V = 0x1, unprogrammed default
   489                           ;	Flash Program Memory Self Write Enable bits
   490                           ;	WRT = 0x3, unprogrammed default
   491  2008                     	org	8200
   492  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      1       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       C      12        0.0%
ABS                  0      0       C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 03 19:37:24 2022

                      pc 0002                       u10 07B0                       u11 07AF  
                     fsr 0004                      l621 0799                      l631 07B6  
                    l623 07A2                      l625 07A8                      l627 07B0  
                    l619 0794                      l629 07B2                      fsr0 0004  
                    indf 0000                     _TMR0 0001                     _main 0794  
                   btemp 007E                     start 0000         nosup@@$_$_CONFIG 0000  
                  ?_main 007B                    _ANSEL 0188                    _PORTD 0008  
                  _TRISD 0088                    _count 007A                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07BF  
           __end_of_main 07BF                   ??_main 007B                   _TRISA4 042C  
           __pdataCOMMON 0070  __end_of__initialization 07FC           __pcstackCOMMON 007B  
         _OPTION_REGbits 0081               __pmaintext 0794                  _display 0070  
   end_of_initialization 07FC            __pidataCOMMON 0777      start_initialization 07BF  
             init_fetch0 0781              __pbssCOMMON 007A                ___latbits 0002  
             _INTCONbits 000B                 init_ram0 0785  
