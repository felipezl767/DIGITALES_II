

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 03 20:31:18 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.36
    20                           ; Generated 28/01/2022 GMT
    21                           ; 
    22                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	idataBANK0
   212  011E                     __pidataBANK0:
   213                           
   214                           ;initializer for _display
   215  011E  343F               	retlw	63
   216  011F  3406               	retlw	6
   217  0120  345B               	retlw	91
   218  0121  344F               	retlw	79
   219  0122  3466               	retlw	102
   220  0123  346D               	retlw	109
   221  0124  347D               	retlw	125
   222  0125  3407               	retlw	7
   223  0126  347F               	retlw	127
   224  0127  346F               	retlw	111
   225  0005                     _PORTAbits	set	5
   226  0008                     _PORTD	set	8
   227  0001                     _TMR0	set	1
   228  000B                     _INTCONbits	set	11
   229  0006                     _PORTB	set	6
   230  0088                     _TRISD	set	136
   231  0081                     _OPTION_REGbits	set	129
   232  042C                     _TRISA4	set	1068
   233  0430                     _TRISB0	set	1072
   234  0188                     _ANSEL	set	392
   235  0189                     _ANSELH	set	393
   236                           
   237                           	psect	cinit
   238  000F                     start_initialization:	
   239                           ; #config settings
   240                           
   241  000F                     __initialization:
   242                           
   243                           ; Initialize objects allocated to BANK0
   244  000F  1383               	bcf	3,7	;select IRP bank0
   245  0010  302A               	movlw	low (__pdataBANK0+10)
   246  0011  00FD               	movwf	btemp+-1
   247  0012  3001               	movlw	high __pidataBANK0
   248  0013  00FE               	movwf	btemp
   249  0014  301E               	movlw	low __pidataBANK0
   250  0015  00FF               	movwf	btemp+1
   251  0016  3020               	movlw	low __pdataBANK0
   252  0017  0084               	movwf	4
   253  0018  120A  118A  210F  120A  118A  	fcall	init_ram0
   254                           
   255                           ; Clear objects allocated to COMMON
   256  001D  01F8               	clrf	__pbssCOMMON& (0+127)
   257  001E  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   258  001F                     end_of_initialization:	
   259                           ;End of C runtime variable initialization code
   260                           
   261  001F                     __end_of__initialization:
   262  001F  0183               	clrf	3
   263  0020  120A  118A  2823   	ljmp	_main	;jump to C main() function
   264                           
   265                           	psect	bssCOMMON
   266  0078                     __pbssCOMMON:
   267  0078                     _count_ms:
   268  0078                     	ds	1
   269  0079                     _count:
   270  0079                     	ds	1
   271                           
   272                           	psect	dataBANK0
   273  0020                     __pdataBANK0:
   274  0020                     _display:
   275  0020                     	ds	10
   276                           
   277                           	psect	inittext
   278  010B                     init_fetch0:	
   279                           ;	Called with low address in FSR and high address in W
   280                           
   281  010B  087E               	movf	btemp,w
   282  010C  008A               	movwf	10
   283  010D  087F               	movf	btemp+1,w
   284  010E  0082               	movwf	2
   285  010F                     init_ram0:	
   286                           ;Called with:
   287                           ;	high address of idata address in btemp 
   288                           ;	low address of idata address in btemp+1 
   289                           ;	low address of data in FSR
   290                           ;	high address + 1 of data in btemp-1
   291                           
   292  010F  120A  118A  210B  120A  118A  	fcall	init_fetch0
   293  0114  0080               	movwf	0
   294  0115  0A84               	incf	4,f
   295  0116  0804               	movf	4,w
   296  0117  067D               	xorwf	btemp+-1,w
   297  0118  1903               	btfsc	3,2
   298  0119  3400               	retlw	0
   299  011A  0AFF               	incf	btemp+1,f
   300  011B  1903               	btfsc	3,2
   301  011C  0AFE               	incf	btemp,f
   302  011D  290F               	goto	init_ram0
   303                           
   304                           	psect	cstackCOMMON
   305  0070                     __pcstackCOMMON:
   306  0070                     ?_ISR_TIMER_0:
   307  0070                     ??_ISR_TIMER_0:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_main:	
   311                           ; 1 bytes @ 0x0
   312                           
   313                           
   314                           ; 2 bytes @ 0x0
   315  0070                     	ds	3
   316  0073                     ?___awmod:
   317  0073                     ___awmod@divisor:	
   318                           ; 2 bytes @ 0x3
   319                           
   320                           
   321                           ; 2 bytes @ 0x3
   322  0073                     	ds	2
   323  0075                     ___awmod@dividend:
   324                           
   325                           ; 2 bytes @ 0x5
   326  0075                     	ds	2
   327  0077                     ??___awmod:
   328                           
   329                           ; 1 bytes @ 0x7
   330  0077                     	ds	1
   331                           
   332                           	psect	cstackBANK0
   333  002A                     __pcstackBANK0:
   334  002A                     ___awmod@counter:
   335                           
   336                           ; 1 bytes @ 0x0
   337  002A                     	ds	1
   338  002B                     ___awmod@sign:
   339                           
   340                           ; 1 bytes @ 0x1
   341  002B                     	ds	1
   342  002C                     ??_main:
   343                           
   344                           ; 1 bytes @ 0x2
   345  002C                     	ds	2
   346                           
   347                           	psect	maintext
   348  0023                     __pmaintext:	
   349 ;;
   350 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   351 ;;
   352 ;; *************** function _main *****************
   353 ;; Defined at:
   354 ;;		line 48 in file "temporiza.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;		None
   357 ;; Auto vars:     Size  Location     Type
   358 ;;		None
   359 ;; Return value:  Size  Location     Type
   360 ;;                  2   34[None  ] int 
   361 ;; Registers used:
   362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   363 ;; Tracked objects:
   364 ;;		On entry : B00/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   368 ;;      Params:         0       0       0       0       0
   369 ;;      Locals:         0       0       0       0       0
   370 ;;      Temps:          0       2       0       0       0
   371 ;;      Totals:         0       2       0       0       0
   372 ;;Total ram usage:        2 bytes
   373 ;; Hardware stack levels required when called: 2
   374 ;; This function calls:
   375 ;;		___awmod
   376 ;; This function is called by:
   377 ;;		Startup code after reset
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381  0023                     _main:	
   382                           ;psect for function _main
   383                           
   384  0023                     l857:	
   385                           ;incstack = 0
   386                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   387                           
   388                           
   389                           ;temporiza.c: 50:     TRISB0 = 0;
   390  0023  1683               	bsf	3,5	;RP0=1, select bank1
   391  0024  1303               	bcf	3,6	;RP1=0, select bank1
   392  0025  1006               	bcf	6,0	;volatile
   393  0026                     l859:
   394                           
   395                           ;temporiza.c: 51:     PORTB = 0;
   396  0026  1283               	bcf	3,5	;RP0=0, select bank0
   397  0027  1303               	bcf	3,6	;RP1=0, select bank0
   398  0028  0186               	clrf	6	;volatile
   399                           
   400                           ;temporiza.c: 52:     ANSELH = 0x00;
   401  0029  1683               	bsf	3,5	;RP0=1, select bank3
   402  002A  1703               	bsf	3,6	;RP1=1, select bank3
   403  002B  0189               	clrf	9	;volatile
   404  002C                     l861:
   405                           
   406                           ;temporiza.c: 54:     INTCONbits.GIE = 0;
   407  002C  138B               	bcf	11,7	;volatile
   408  002D                     l863:
   409                           
   410                           ;temporiza.c: 55:     OPTION_REGbits.T0CS = 0;
   411  002D  1683               	bsf	3,5	;RP0=1, select bank1
   412  002E  1303               	bcf	3,6	;RP1=0, select bank1
   413  002F  1281               	bcf	1,5	;volatile
   414  0030                     l865:
   415                           
   416                           ;temporiza.c: 56:     OPTION_REGbits.PSA = 0;
   417  0030  1181               	bcf	1,3	;volatile
   418  0031                     l867:
   419                           
   420                           ;temporiza.c: 57:     OPTION_REGbits.PS = 0b111;
   421  0031  3007               	movlw	7
   422  0032  0481               	iorwf	1,f	;volatile
   423  0033                     l869:
   424                           
   425                           ;temporiza.c: 58:     TMR0 = 60;
   426  0033  303C               	movlw	60
   427  0034  1283               	bcf	3,5	;RP0=0, select bank0
   428  0035  1303               	bcf	3,6	;RP1=0, select bank0
   429  0036  0081               	movwf	1	;volatile
   430  0037                     l871:
   431                           
   432                           ;temporiza.c: 60:     TRISD = 0x00;
   433  0037  1683               	bsf	3,5	;RP0=1, select bank1
   434  0038  1303               	bcf	3,6	;RP1=0, select bank1
   435  0039  0188               	clrf	8	;volatile
   436  003A                     l873:
   437                           
   438                           ;temporiza.c: 61:     PORTD = 0x00;
   439  003A  1283               	bcf	3,5	;RP0=0, select bank0
   440  003B  1303               	bcf	3,6	;RP1=0, select bank0
   441  003C  0188               	clrf	8	;volatile
   442  003D                     l875:
   443                           
   444                           ;temporiza.c: 63:     TRISA4 = 1;
   445  003D  1683               	bsf	3,5	;RP0=1, select bank1
   446  003E  1303               	bcf	3,6	;RP1=0, select bank1
   447  003F  1605               	bsf	5,4	;volatile
   448  0040                     l877:
   449                           
   450                           ;temporiza.c: 64:     ANSEL = 0x00;
   451  0040  1683               	bsf	3,5	;RP0=1, select bank3
   452  0041  1703               	bsf	3,6	;RP1=1, select bank3
   453  0042  0188               	clrf	8	;volatile
   454  0043                     l879:
   455                           
   456                           ;temporiza.c: 66:     INTCONbits.T0IF = 0;
   457  0043  110B               	bcf	11,2	;volatile
   458  0044                     l881:
   459                           
   460                           ;temporiza.c: 67:     INTCONbits.T0IE = 1;
   461  0044  168B               	bsf	11,5	;volatile
   462  0045                     l883:
   463                           
   464                           ;temporiza.c: 68:     INTCONbits.PEIE = 1;
   465  0045  170B               	bsf	11,6	;volatile
   466  0046                     l885:
   467                           
   468                           ;temporiza.c: 69:     INTCONbits.GIE = 1;
   469  0046  178B               	bsf	11,7	;volatile
   470  0047                     l887:
   471                           
   472                           ;temporiza.c: 73:         PORTD = display[ count % 10];
   473  0047  300A               	movlw	10
   474  0048  00F3               	movwf	___awmod@divisor
   475  0049  3000               	movlw	0
   476  004A  00F4               	movwf	___awmod@divisor+1
   477  004B  0879               	movf	_count,w
   478  004C  1283               	bcf	3,5	;RP0=0, select bank0
   479  004D  1303               	bcf	3,6	;RP1=0, select bank0
   480  004E  00AC               	movwf	??_main
   481  004F  01AD               	clrf	??_main+1
   482  0050  082C               	movf	??_main,w
   483  0051  00F5               	movwf	___awmod@dividend
   484  0052  082D               	movf	??_main+1,w
   485  0053  00F6               	movwf	___awmod@dividend+1
   486  0054  120A  118A  2085  120A  118A  	fcall	___awmod
   487  0059  0873               	movf	?___awmod,w
   488  005A  3E20               	addlw	(low (_display| 0))& (0+255)
   489  005B  0084               	movwf	4
   490  005C  1383               	bcf	3,7	;select IRP bank0
   491  005D  0800               	movf	0,w
   492  005E  1283               	bcf	3,5	;RP0=0, select bank0
   493  005F  1303               	bcf	3,6	;RP1=0, select bank0
   494  0060  0088               	movwf	8	;volatile
   495  0061                     l889:
   496                           
   497                           ;temporiza.c: 74:         _delay((unsigned long)((20)*(8000000/4000.0)));
   498  0061  3034               	movlw	52
   499  0062  1283               	bcf	3,5	;RP0=0, select bank0
   500  0063  1303               	bcf	3,6	;RP1=0, select bank0
   501  0064  00AD               	movwf	??_main+1
   502  0065  30F1               	movlw	241
   503  0066  00AC               	movwf	??_main
   504  0067                     u357:
   505  0067  0BAC               	decfsz	??_main,f
   506  0068  2867               	goto	u357
   507  0069  0BAD               	decfsz	??_main+1,f
   508  006A  2867               	goto	u357
   509  006B                     l891:
   510                           
   511                           ;temporiza.c: 79:         if (!PORTAbits.RA4) {
   512  006B  1283               	bcf	3,5	;RP0=0, select bank0
   513  006C  1303               	bcf	3,6	;RP1=0, select bank0
   514  006D  1A05               	btfsc	5,4	;volatile
   515  006E  2870               	goto	u341
   516  006F  2871               	goto	u340
   517  0070                     u341:
   518  0070  2847               	goto	l887
   519  0071                     u340:
   520  0071                     l893:
   521                           
   522                           ;temporiza.c: 80:             _delay((unsigned long)((50)*(8000000/4000.0)));
   523  0071  3082               	movlw	130
   524  0072  1283               	bcf	3,5	;RP0=0, select bank0
   525  0073  1303               	bcf	3,6	;RP1=0, select bank0
   526  0074  00AD               	movwf	??_main+1
   527  0075  30DD               	movlw	221
   528  0076  00AC               	movwf	??_main
   529  0077                     u367:
   530  0077  0BAC               	decfsz	??_main,f
   531  0078  2877               	goto	u367
   532  0079  0BAD               	decfsz	??_main+1,f
   533  007A  2877               	goto	u367
   534  007B                     l895:
   535                           
   536                           ;temporiza.c: 81:             count = 0;
   537  007B  01F9               	clrf	_count
   538  007C                     l897:
   539                           
   540                           ;temporiza.c: 82:             TMR0 = 60;
   541  007C  303C               	movlw	60
   542  007D  1283               	bcf	3,5	;RP0=0, select bank0
   543  007E  1303               	bcf	3,6	;RP1=0, select bank0
   544  007F  0081               	movwf	1	;volatile
   545  0080                     l899:
   546                           
   547                           ;temporiza.c: 83:             INTCONbits.T0IF = 0;
   548  0080  110B               	bcf	11,2	;volatile
   549  0081  2847               	goto	l887
   550  0082  120A  118A  280C   	ljmp	start
   551  0085                     __end_of_main:
   552                           
   553                           	psect	text1
   554  0085                     __ptext1:	
   555 ;; *************** function ___awmod *****************
   556 ;; Defined at:
   557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;  divisor         2    3[COMMON] int 
   560 ;;  dividend        2    5[COMMON] int 
   561 ;; Auto vars:     Size  Location     Type
   562 ;;  sign            1    1[BANK0 ] unsigned char 
   563 ;;  counter         1    0[BANK0 ] unsigned char 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  2    3[COMMON] int 
   566 ;; Registers used:
   567 ;;		wreg, status,2, status,0
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         4       0       0       0       0
   574 ;;      Locals:         0       2       0       0       0
   575 ;;      Temps:          1       0       0       0       0
   576 ;;      Totals:         5       2       0       0       0
   577 ;;Total ram usage:        7 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; Hardware stack levels required when called: 1
   580 ;; This function calls:
   581 ;;		Nothing
   582 ;; This function is called by:
   583 ;;		_main
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587  0085                     ___awmod:	
   588                           ;psect for function ___awmod
   589                           
   590  0085                     l819:	
   591                           ;incstack = 0
   592                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   593                           
   594  0085  1283               	bcf	3,5	;RP0=0, select bank0
   595  0086  1303               	bcf	3,6	;RP1=0, select bank0
   596  0087  01AB               	clrf	___awmod@sign
   597  0088                     l821:
   598  0088  1FF6               	btfss	___awmod@dividend+1,7
   599  0089  288B               	goto	u251
   600  008A  288C               	goto	u250
   601  008B                     u251:
   602  008B  2893               	goto	l827
   603  008C                     u250:
   604  008C                     l823:
   605  008C  09F5               	comf	___awmod@dividend,f
   606  008D  09F6               	comf	___awmod@dividend+1,f
   607  008E  0AF5               	incf	___awmod@dividend,f
   608  008F  1903               	skipnz
   609  0090  0AF6               	incf	___awmod@dividend+1,f
   610  0091                     l825:
   611  0091  01AB               	clrf	___awmod@sign
   612  0092  0AAB               	incf	___awmod@sign,f
   613  0093                     l827:
   614  0093  1FF4               	btfss	___awmod@divisor+1,7
   615  0094  2896               	goto	u261
   616  0095  2897               	goto	u260
   617  0096                     u261:
   618  0096  289C               	goto	l831
   619  0097                     u260:
   620  0097                     l829:
   621  0097  09F3               	comf	___awmod@divisor,f
   622  0098  09F4               	comf	___awmod@divisor+1,f
   623  0099  0AF3               	incf	___awmod@divisor,f
   624  009A  1903               	skipnz
   625  009B  0AF4               	incf	___awmod@divisor+1,f
   626  009C                     l831:
   627  009C  0873               	movf	___awmod@divisor,w
   628  009D  0474               	iorwf	___awmod@divisor+1,w
   629  009E  1903               	btfsc	3,2
   630  009F  28A1               	goto	u271
   631  00A0  28A2               	goto	u270
   632  00A1                     u271:
   633  00A1  28D1               	goto	l849
   634  00A2                     u270:
   635  00A2                     l833:
   636  00A2  01AA               	clrf	___awmod@counter
   637  00A3  0AAA               	incf	___awmod@counter,f
   638  00A4  28B0               	goto	l839
   639  00A5                     l835:
   640  00A5  3001               	movlw	1
   641  00A6                     u285:
   642  00A6  1003               	clrc
   643  00A7  0DF3               	rlf	___awmod@divisor,f
   644  00A8  0DF4               	rlf	___awmod@divisor+1,f
   645  00A9  3EFF               	addlw	-1
   646  00AA  1D03               	skipz
   647  00AB  28A6               	goto	u285
   648  00AC                     l837:
   649  00AC  3001               	movlw	1
   650  00AD  00F7               	movwf	??___awmod
   651  00AE  0877               	movf	??___awmod,w
   652  00AF  07AA               	addwf	___awmod@counter,f
   653  00B0                     l839:
   654  00B0  1FF4               	btfss	___awmod@divisor+1,7
   655  00B1  28B3               	goto	u291
   656  00B2  28B4               	goto	u290
   657  00B3                     u291:
   658  00B3  28A5               	goto	l835
   659  00B4                     u290:
   660  00B4                     l841:
   661  00B4  0874               	movf	___awmod@divisor+1,w
   662  00B5  0276               	subwf	___awmod@dividend+1,w
   663  00B6  1D03               	skipz
   664  00B7  28BA               	goto	u305
   665  00B8  0873               	movf	___awmod@divisor,w
   666  00B9  0275               	subwf	___awmod@dividend,w
   667  00BA                     u305:
   668  00BA  1C03               	skipc
   669  00BB  28BD               	goto	u301
   670  00BC  28BE               	goto	u300
   671  00BD                     u301:
   672  00BD  28C4               	goto	l845
   673  00BE                     u300:
   674  00BE                     l843:
   675  00BE  0873               	movf	___awmod@divisor,w
   676  00BF  02F5               	subwf	___awmod@dividend,f
   677  00C0  0874               	movf	___awmod@divisor+1,w
   678  00C1  1C03               	skipc
   679  00C2  03F6               	decf	___awmod@dividend+1,f
   680  00C3  02F6               	subwf	___awmod@dividend+1,f
   681  00C4                     l845:
   682  00C4  3001               	movlw	1
   683  00C5                     u315:
   684  00C5  1003               	clrc
   685  00C6  0CF4               	rrf	___awmod@divisor+1,f
   686  00C7  0CF3               	rrf	___awmod@divisor,f
   687  00C8  3EFF               	addlw	-1
   688  00C9  1D03               	skipz
   689  00CA  28C5               	goto	u315
   690  00CB                     l847:
   691  00CB  3001               	movlw	1
   692  00CC  02AA               	subwf	___awmod@counter,f
   693  00CD  1D03               	btfss	3,2
   694  00CE  28D0               	goto	u321
   695  00CF  28D1               	goto	u320
   696  00D0                     u321:
   697  00D0  28B4               	goto	l841
   698  00D1                     u320:
   699  00D1                     l849:
   700  00D1  082B               	movf	___awmod@sign,w
   701  00D2  1903               	btfsc	3,2
   702  00D3  28D5               	goto	u331
   703  00D4  28D6               	goto	u330
   704  00D5                     u331:
   705  00D5  28DB               	goto	l853
   706  00D6                     u330:
   707  00D6                     l851:
   708  00D6  09F5               	comf	___awmod@dividend,f
   709  00D7  09F6               	comf	___awmod@dividend+1,f
   710  00D8  0AF5               	incf	___awmod@dividend,f
   711  00D9  1903               	skipnz
   712  00DA  0AF6               	incf	___awmod@dividend+1,f
   713  00DB                     l853:
   714  00DB  0876               	movf	___awmod@dividend+1,w
   715  00DC  00F4               	movwf	?___awmod+1
   716  00DD  0875               	movf	___awmod@dividend,w
   717  00DE  00F3               	movwf	?___awmod
   718  00DF                     l299:
   719  00DF  0008               	return
   720  00E0                     __end_of___awmod:
   721                           
   722                           	psect	text2
   723  00E0                     __ptext2:	
   724 ;; *************** function _ISR_TIMER_0 *****************
   725 ;; Defined at:
   726 ;;		line 90 in file "temporiza.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, status,2, status,0
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         0       0       0       0       0
   741 ;;      Locals:         0       0       0       0       0
   742 ;;      Temps:          3       0       0       0       0
   743 ;;      Totals:         3       0       0       0       0
   744 ;;Total ram usage:        3 bytes
   745 ;; Hardware stack levels used: 1
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		Interrupt level 1
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753  00E0                     _ISR_TIMER_0:	
   754                           ;psect for function _ISR_TIMER_0
   755                           
   756  00E0                     i1l721:
   757                           
   758                           ;temporiza.c: 91:     if (INTCONbits.T0IE && INTCONbits.T0IF) {
   759  00E0  1E8B               	btfss	11,5	;volatile
   760  00E1  28E3               	goto	u11_21
   761  00E2  28E4               	goto	u11_20
   762  00E3                     u11_21:
   763  00E3  2904               	goto	i1l47
   764  00E4                     u11_20:
   765  00E4                     i1l723:
   766  00E4  1D0B               	btfss	11,2	;volatile
   767  00E5  28E7               	goto	u12_21
   768  00E6  28E8               	goto	u12_20
   769  00E7                     u12_21:
   770  00E7  2904               	goto	i1l47
   771  00E8                     u12_20:
   772  00E8                     i1l725:
   773                           
   774                           ;temporiza.c: 92:         PORTB = ~PORTB;
   775  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   776  00E9  1303               	bcf	3,6	;RP1=0, select bank0
   777  00EA  0986               	comf	6,f	;volatile
   778  00EB                     i1l727:
   779                           
   780                           ;temporiza.c: 93:         count_ms++;
   781  00EB  3001               	movlw	1
   782  00EC  00F0               	movwf	??_ISR_TIMER_0
   783  00ED  0870               	movf	??_ISR_TIMER_0,w
   784  00EE  07F8               	addwf	_count_ms,f
   785                           
   786                           ;temporiza.c: 94:         if(count_ms == 20){
   787  00EF  3014               	movlw	20
   788  00F0  0678               	xorwf	_count_ms,w
   789  00F1  1D03               	btfss	3,2
   790  00F2  28F4               	goto	u13_21
   791  00F3  28F5               	goto	u13_20
   792  00F4                     u13_21:
   793  00F4  2901               	goto	i1l733
   794  00F5                     u13_20:
   795  00F5                     i1l729:
   796                           
   797                           ;temporiza.c: 95:             if (++count == 100) {
   798  00F5  3001               	movlw	1
   799  00F6  00F0               	movwf	??_ISR_TIMER_0
   800  00F7  0870               	movf	??_ISR_TIMER_0,w
   801  00F8  07F9               	addwf	_count,f
   802  00F9  3064               	movlw	100
   803  00FA  0679               	xorwf	_count,w
   804  00FB  1D03               	btfss	3,2
   805  00FC  28FE               	goto	u14_21
   806  00FD  28FF               	goto	u14_20
   807  00FE                     u14_21:
   808  00FE  2900               	goto	i1l46
   809  00FF                     u14_20:
   810  00FF                     i1l731:
   811                           
   812                           ;temporiza.c: 96:                 count = 0;
   813  00FF  01F9               	clrf	_count
   814  0100                     i1l46:	
   815                           ;temporiza.c: 97:             }
   816                           
   817                           
   818                           ;temporiza.c: 98:             count_ms = 0;
   819  0100  01F8               	clrf	_count_ms
   820  0101                     i1l733:
   821                           
   822                           ;temporiza.c: 100:         TMR0 = 60;
   823  0101  303C               	movlw	60
   824  0102  0081               	movwf	1	;volatile
   825  0103                     i1l735:
   826                           
   827                           ;temporiza.c: 101:         INTCONbits.T0IF = 0;
   828  0103  110B               	bcf	11,2	;volatile
   829  0104                     i1l47:
   830  0104  0872               	movf	??_ISR_TIMER_0+2,w
   831  0105  008A               	movwf	10
   832  0106  0E71               	swapf	??_ISR_TIMER_0+1,w
   833  0107  0083               	movwf	3
   834  0108  0EFE               	swapf	btemp,f
   835  0109  0E7E               	swapf	btemp,w
   836  010A  0009               	retfie
   837  010B                     __end_of_ISR_TIMER_0:
   838  007E                     btemp	set	126	;btemp
   839  007E                     wtemp0	set	126
   840                           
   841                           	psect	intentry
   842  0004                     __pintentry:	
   843                           ;incstack = 0
   844                           ; Regs used in _ISR_TIMER_0: [wreg+status,2+status,0]
   845                           
   846  0004                     interrupt_function:
   847  007E                     saved_w	set	btemp
   848  0004  00FE               	movwf	btemp
   849  0005  0E03               	swapf	3,w
   850  0006  00F1               	movwf	??_ISR_TIMER_0+1
   851  0007  080A               	movf	10,w
   852  0008  00F2               	movwf	??_ISR_TIMER_0+2
   853  0009  120A  118A  28E0   	ljmp	_ISR_TIMER_0
   854                           
   855                           	psect	idloc
   856                           
   857                           ;Config register IDLOC0 @ 0x2000
   858                           ;	unspecified, using default values
   859  2000                     	org	8192
   860  2000  3FFF               	dw	16383
   861                           
   862                           ;Config register IDLOC1 @ 0x2001
   863                           ;	unspecified, using default values
   864  2001                     	org	8193
   865  2001  3FFF               	dw	16383
   866                           
   867                           ;Config register IDLOC2 @ 0x2002
   868                           ;	unspecified, using default values
   869  2002                     	org	8194
   870  2002  3FFF               	dw	16383
   871                           
   872                           ;Config register IDLOC3 @ 0x2003
   873                           ;	unspecified, using default values
   874  2003                     	org	8195
   875  2003  3FFF               	dw	16383
   876                           
   877                           	psect	config
   878                           
   879                           ;Config register CONFIG1 @ 0x2007
   880                           ;	Oscillator Selection bits
   881                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
   882                           ;	Watchdog Timer Enable bit
   883                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   884                           ;	Power-up Timer Enable bit
   885                           ;	PWRTE = OFF, PWRT disabled
   886                           ;	RE3/MCLR pin function select bit
   887                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   888                           ;	Code Protection bit
   889                           ;	CP = OFF, Program memory code protection is disabled
   890                           ;	Data Code Protection bit
   891                           ;	CPD = OFF, Data memory code protection is disabled
   892                           ;	Brown Out Reset Selection bits
   893                           ;	BOREN = OFF, BOR disabled
   894                           ;	Internal External Switchover bit
   895                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   896                           ;	Fail-Safe Clock Monitor Enabled bit
   897                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   898                           ;	Low Voltage Programming Enable bit
   899                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   900                           ;	In-Circuit Debugger Mode bit
   901                           ;	DEBUG = 0x1, unprogrammed default
   902  2007                     	org	8199
   903  2007  20D5               	dw	8405
   904                           
   905                           ;Config register CONFIG2 @ 0x2008
   906                           ;	Brown-out Reset Selection bit
   907                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   908                           ;	Flash Program Memory Self Write Enable bits
   909                           ;	WRT = OFF, Write protection off
   910  2008                     	org	8200
   911  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      4      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awmod

Critical Paths under _ISR_TIMER_0 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awmod

Critical Paths under _ISR_TIMER_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_TIMER_0 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_TIMER_0 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_TIMER_0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     613
                                              2 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     613
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_TIMER_0                                          3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod

 _ISR_TIMER_0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      4       E       5       17.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      18      12        0.0%
ABS                  0      0      18       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 03 20:31:18 2022

                      pc 0002                       fsr 0004                      l299 00DF  
                    l821 0088                      l831 009C                      l823 008C  
                    l841 00B4                      l833 00A2                      l825 0091  
                    l851 00D6                      l843 00BE                      l835 00A5  
                    l827 0093                      l819 0085                      l853 00DB  
                    l845 00C4                      l837 00AC                      l829 0097  
                    l861 002C                      l847 00CB                      l839 00B0  
                    l871 0037                      l863 002D                      l849 00D1  
                    l881 0044                      l873 003A                      l865 0030  
                    l857 0023                      l891 006B                      l883 0045  
                    l875 003D                      l867 0031                      l859 0026  
                    l893 0071                      l885 0046                      l877 0040  
                    l869 0033                      l895 007B                      l887 0047  
                    l879 0043                      l897 007C                      l889 0061  
                    l899 0080                      u300 00BE                      u301 00BD  
                    u320 00D1                      u321 00D0                      u305 00BA  
                    u330 00D6                      u250 008C                      u331 00D5  
                    u315 00C5                      u251 008B                      u260 0097  
                    u340 0071                      u261 0096                      u341 0070  
                    u270 00A2                      u271 00A1                      u290 00B4  
                    u291 00B3                      u285 00A6                      u357 0067  
                    u367 0077                      fsr0 0004                      indf 0000  
           ___awmod@sign 002B                     i1l46 0100                     i1l47 0104  
                   _TMR0 0001                     _main 0023                     btemp 007E  
                   start 000C                    ?_main 0070          __end_of___awmod 00E0  
                  _ANSEL 0188                    i1l721 00E0                    i1l731 00FF  
                  i1l723 00E4                    i1l733 0101                    i1l725 00E8  
                  i1l735 0103                    i1l727 00EB                    i1l729 00F5  
                  u11_20 00E4                    u11_21 00E3                    u12_20 00E8  
                  u12_21 00E7                    u13_20 00F5                    u13_21 00F4  
                  u14_20 00FF                    u14_21 00FE                    _PORTB 0006  
                  _PORTD 0008                    _TRISD 0088                    _count 0079  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             ?_ISR_TIMER_0 0070             __end_of_main 0085  
                 ??_main 002C                   _ANSELH 0189                   _TRISB0 0430  
                 _TRISA4 042C                ??___awmod 0077          ___awmod@divisor 0073  
        ___awmod@counter 002A                   saved_w 007E  __end_of__initialization 001F  
         __pcstackCOMMON 0070             __pidataBANK0 011E           _OPTION_REGbits 0081  
             __pmaintext 0023               __pintentry 0004                  ___awmod 0085  
                __ptext1 0085                  __ptext2 00E0                  _display 0020  
       ___awmod@dividend 0075     end_of_initialization 001F                _PORTAbits 0005  
    start_initialization 000F               init_fetch0 010B              __pdataBANK0 0020  
            __pbssCOMMON 0078                ___latbits 0002            __pcstackBANK0 002A  
          ??_ISR_TIMER_0 0070                 ?___awmod 0073        interrupt_function 0004  
    __end_of_ISR_TIMER_0 010B                 _count_ms 0078              _ISR_TIMER_0 00E0  
             _INTCONbits 000B                 init_ram0 010F                 intlevel1 0000  
